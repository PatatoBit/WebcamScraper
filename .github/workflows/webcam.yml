name: Capture Webcams and Process Images

on:
  schedule:
    - cron: "0 * * * *" # Runs every hour at the top of the hour
  workflow_dispatch: # Allows manual triggering

jobs:
  capture_screenshots:
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js and install dependencies for webcam capture
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies for webcam capture
        run: |
          npm install
          npm install puppeteer

      # Step 3: Run the main script for capturing webcam screenshots
      - name: Run main script for webcam capture
        env:
          AQI_API_KEY: ${{ secrets.AQI_API_KEY }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          WINDY_API_KEY: ${{ secrets.WINDY_API_KEY }}
        run: npx tsx src/index.ts

      # Step 4: Commit and push screenshots to `images` branch
      - name: Commit and push screenshots to images branch
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git fetch
          git checkout -B images  # Create or switch to `images` branch
          git add screenshots/
          git commit -m "Add webcam screenshots for $(date)"
          git push origin images --force

  process_images:
    runs-on: ubuntu-latest
    needs: capture_screenshots # This job will run only after capture_screenshots finishes

    steps:
      # Step 1: Checkout the repository and switch to `images` branch
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: images # Ensure we work on the `images` branch

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install dependencies for image processing
      - name: Install dependencies for image processing
        run: |
          python -m pip install --upgrade pip
          pip install opencv-python scikit-learn

      # Step 4: Run image processing script
      - name: Run image processing script
        run: python cleanup/main.py

      # Step 5: Commit and push processed images to `images` branch
      - name: Commit and push processed images to images branch
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add cleanshot/
          git commit -m "Processed images and cleaned data for $(date)"
          git push origin images --force
